<!DOCTYPE html>
<html>
  <head>
    <script src="/assets/js/vue-2.3.4.js"></script>
    <script src="/assets/bin/bundle.js"></script>
    <script src="https://unpkg.com/axios@0.12.0/dist/axios.min.js"></script>
    <script src="https://unpkg.com/lodash@4.13.1/lodash.min.js"></script>
  </head>
  <body>

    <template src="/component/test.html"></template>

    <div id="example">
      <p>원본 메시지: "{{ message }}"</p>
      <p>뒤집히도록 계산된 메시지: "{{ reversedMessage }}"</p>
      <p>{{ now }} </p>
    </div>

    <div id="watch-example">
      <p>
        yes/no 질문을 물어보세요:
        <input v-model="question">
      </p>
      <p>{{ answer }}</p>
    </div>

    <div class="container" id="app">
      <div style="display:flex; flex-direction: column;">
        <img :src="imageSrc" class="image">
          <span class="btn btn-default btn-file">
              Browse <input @change="uploadImage" type="file" name="image" accept="image/*">
          </span>
      </div>
    </div>

  <script>

//    var vm = new Vue({
//      el: '#example',
//      data: {
//        message: '안녕하세요'
//      },
//      computed: {
//        // 계산된 getter
//        reversedMessage: function () {
//          // `this` 는 vm 인스턴스를 가리킵니다.
//          return this.message.split('').reverse().join('')
//        },
//
//        now: function () {
//          return Date.now()
//        }
//      }
//
//    })

  var app = new Vue({
    el: '#app',
    data () {
      return {
        imageSrc: 'http://nahmdong.com/vitalhill/img/default.png'
      }
    },
    methods: {
      uploadImage: function(e) {

        var files = e.target.files;
        if(!files[0]) {
          return;
        }
        var data = new FormData();
        data.append('files', files[0]);
        var reader = new FileReader();
        reader.onload = (e) => {
          this.imageSrc = e.target.result;
        };

        console.log(data);
        axios.post('/api/image', data, {headers: { 'Content-Type': 'multipart/form-data' } }).then(function (response) {
          reader.readAsDataURL(files[0]);
        }).catch(function (error) {
          console.log(error) // catch your error
        });
      }
    }
  })


    var watchExampleVM = new Vue({
      el: '#watch-example',
      data: {
        question: '',
        answer: '질문을 하기 전까지는 대답할 수 없습니다.'
      },
      watch: {
        // 질문이 변경될 때 마다 이 기능이 실행됩니다.
        question: function (newQuestion) {
          this.answer = '입력을 기다리는 중...'
          this.getAnswer()
        }
      },
      methods: {
        // _.debounce는 lodash가 제공하는 기능으로
        // 특히 시간이 많이 소요되는 작업을 실행할 수 있는 빈도를 제한합니다.
        // 이 경우, 우리는 yesno.wtf/api 에 액세스 하는 빈도를 제한하고,
        // 사용자가 ajax요청을 하기 전에 타이핑을 완전히 마칠 때까지 기다리길 바랍니다.
        // _.debounce 함수(또는 이와 유사한 _.throttle)에 대한
        // 자세한 내용을 보려면 https://lodash.com/docs#debounce 를 방문하세요.
        getAnswer: _.debounce(
                function () {
                  if (this.question.indexOf('?') === -1) {
                    this.answer = '질문에는 일반적으로 물음표가 포함 됩니다. ;-)'
                    return
                  }
                  this.answer = '생각중...'
                  var vm = this
                  axios.get('https://yesno.wtf/api')
                          .then(function (response) {
                            vm.answer = _.capitalize(response.data.answer)
                          })
                          .catch(function (error) {
                            vm.answer = '에러! API 요청에 오류가 있습니다. ' + error
                          })
                },
                // 사용자가 입력을 기다리는 시간(밀리세컨드) 입니다.
                500
        )
      }
    })

  </script>

  </body>
</html>
